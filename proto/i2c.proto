syntax = "proto3";
option optimize_for = LITE_RUNTIME;

package i2c_proto;

enum I2cId {
  I2C0 = 0;
  I2C1 = 1;
}

message I2cConfig {
  uint32 clock_rate = 2;
}

message I2cMasterData {
  uint32 request_id = 2;
  uint32 slave_addr = 3;
  uint32 read_size = 5;
  bytes data = 4;
}

message I2cSlaveData {
  uint32 request_id = 1;
  bytes pattern = 2;
  bytes data = 3;
}

message I2cStatus {
  uint32 master_queue_space = 1;
  uint32 master_buffer_space = 2;
  bool master_overflow = 3;
  uint32 slave_dict_space = 4;
  uint32 slave_buffer_space = 5;
  bool slave_overflow = 6;
}

message I2cMsg {
  I2cId i2c_id = 1;
  uint32 sequence_number = 2;
  oneof msg {
    I2cConfig cfg_msg = 3;
    I2cMasterData master_msg = 4;
    I2cSlaveData slave_msg = 5;
    I2cStatus status_msg = 6;
  }
}
