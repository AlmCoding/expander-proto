/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_DAC_PROTO_DAC_PB_H_INCLUDED
#define PB_DAC_PROTO_DAC_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _dac_proto_DacMode {
    dac_proto_DacMode_DAC_MODE_STATIC = 0,
    dac_proto_DacMode_DAC_MODE_PERIODIC = 1,
    dac_proto_DacMode_DAC_MODE_STREAMING = 2
} dac_proto_DacMode;

typedef enum _dac_proto_DacConfigStatusCode {
    dac_proto_DacConfigStatusCode_CFG_NOT_INIT = 0,
    dac_proto_DacConfigStatusCode_CFG_SUCCESS = 1,
    dac_proto_DacConfigStatusCode_CFG_INVLAID_CONFIG_FLAGS = 2,
    dac_proto_DacConfigStatusCode_CFG_INVALID_MODE = 3,
    dac_proto_DacConfigStatusCode_CFG_INVALID_SAMPLING_RATE = 4,
    dac_proto_DacConfigStatusCode_CFG_INVALID_PERIODIC_SAMPLES = 5,
    dac_proto_DacConfigStatusCode_CFG_INTERFACE_ERROR = 6
} dac_proto_DacConfigStatusCode;

typedef enum _dac_proto_DacDataStatusCode {
    dac_proto_DacDataStatusCode_DATA_NOT_INIT = 0,
    dac_proto_DacDataStatusCode_DATA_SUCCESS = 1,
    dac_proto_DacDataStatusCode_DATA_BAD_REQUEST = 2,
    dac_proto_DacDataStatusCode_DATA_BUFFER_OVERFLOW = 3,
    dac_proto_DacDataStatusCode_DATA_INTERFACE_ERROR = 4
} dac_proto_DacDataStatusCode;

/* Struct definitions */
typedef struct _dac_proto_DacConfigRequest {
    uint32_t request_id;
    bool config_ch1;
    bool config_ch2;
    dac_proto_DacMode mode_ch1;
    dac_proto_DacMode mode_ch2;
    uint32_t sampling_rate_ch1;
    uint32_t sampling_rate_ch2;
    uint32_t periodic_samples_ch1;
    uint32_t periodic_samples_ch2;
} dac_proto_DacConfigRequest;

typedef struct _dac_proto_DacConfigStatus {
    uint32_t request_id;
    dac_proto_DacConfigStatusCode status_code;
} dac_proto_DacConfigStatus;

typedef PB_BYTES_ARRAY_T(128) dac_proto_DacDataRequest_data_ch1_t;
typedef PB_BYTES_ARRAY_T(128) dac_proto_DacDataRequest_data_ch2_t;
typedef struct _dac_proto_DacDataRequest {
    uint32_t request_id;
    bool run_ch1;
    bool run_ch2;
    dac_proto_DacDataRequest_data_ch1_t data_ch1;
    dac_proto_DacDataRequest_data_ch2_t data_ch2;
} dac_proto_DacDataRequest;

typedef struct _dac_proto_DacDataStatus {
    uint32_t request_id;
    dac_proto_DacDataStatusCode status_code;
    uint32_t queue_space;
    uint32_t buffer_space_ch1;
    uint32_t buffer_space_ch2;
} dac_proto_DacDataStatus;

typedef struct _dac_proto_DacMsg {
    uint32_t sequence_number;
    pb_size_t which_msg;
    union {
        dac_proto_DacConfigRequest config_request;
        dac_proto_DacConfigStatus config_status;
        dac_proto_DacDataRequest data_request;
        dac_proto_DacDataStatus data_status;
    } msg;
} dac_proto_DacMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _dac_proto_DacMode_MIN dac_proto_DacMode_DAC_MODE_STATIC
#define _dac_proto_DacMode_MAX dac_proto_DacMode_DAC_MODE_STREAMING
#define _dac_proto_DacMode_ARRAYSIZE ((dac_proto_DacMode)(dac_proto_DacMode_DAC_MODE_STREAMING+1))

#define _dac_proto_DacConfigStatusCode_MIN dac_proto_DacConfigStatusCode_CFG_NOT_INIT
#define _dac_proto_DacConfigStatusCode_MAX dac_proto_DacConfigStatusCode_CFG_INTERFACE_ERROR
#define _dac_proto_DacConfigStatusCode_ARRAYSIZE ((dac_proto_DacConfigStatusCode)(dac_proto_DacConfigStatusCode_CFG_INTERFACE_ERROR+1))

#define _dac_proto_DacDataStatusCode_MIN dac_proto_DacDataStatusCode_DATA_NOT_INIT
#define _dac_proto_DacDataStatusCode_MAX dac_proto_DacDataStatusCode_DATA_INTERFACE_ERROR
#define _dac_proto_DacDataStatusCode_ARRAYSIZE ((dac_proto_DacDataStatusCode)(dac_proto_DacDataStatusCode_DATA_INTERFACE_ERROR+1))

#define dac_proto_DacConfigRequest_mode_ch1_ENUMTYPE dac_proto_DacMode
#define dac_proto_DacConfigRequest_mode_ch2_ENUMTYPE dac_proto_DacMode

#define dac_proto_DacConfigStatus_status_code_ENUMTYPE dac_proto_DacConfigStatusCode


#define dac_proto_DacDataStatus_status_code_ENUMTYPE dac_proto_DacDataStatusCode



/* Initializer values for message structs */
#define dac_proto_DacConfigRequest_init_default  {0, 0, 0, _dac_proto_DacMode_MIN, _dac_proto_DacMode_MIN, 0, 0, 0, 0}
#define dac_proto_DacConfigStatus_init_default   {0, _dac_proto_DacConfigStatusCode_MIN}
#define dac_proto_DacDataRequest_init_default    {0, 0, 0, {0, {0}}, {0, {0}}}
#define dac_proto_DacDataStatus_init_default     {0, _dac_proto_DacDataStatusCode_MIN, 0, 0, 0}
#define dac_proto_DacMsg_init_default            {0, 0, {dac_proto_DacConfigRequest_init_default}}
#define dac_proto_DacConfigRequest_init_zero     {0, 0, 0, _dac_proto_DacMode_MIN, _dac_proto_DacMode_MIN, 0, 0, 0, 0}
#define dac_proto_DacConfigStatus_init_zero      {0, _dac_proto_DacConfigStatusCode_MIN}
#define dac_proto_DacDataRequest_init_zero       {0, 0, 0, {0, {0}}, {0, {0}}}
#define dac_proto_DacDataStatus_init_zero        {0, _dac_proto_DacDataStatusCode_MIN, 0, 0, 0}
#define dac_proto_DacMsg_init_zero               {0, 0, {dac_proto_DacConfigRequest_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define dac_proto_DacConfigRequest_request_id_tag 1
#define dac_proto_DacConfigRequest_config_ch1_tag 2
#define dac_proto_DacConfigRequest_config_ch2_tag 3
#define dac_proto_DacConfigRequest_mode_ch1_tag  4
#define dac_proto_DacConfigRequest_mode_ch2_tag  5
#define dac_proto_DacConfigRequest_sampling_rate_ch1_tag 6
#define dac_proto_DacConfigRequest_sampling_rate_ch2_tag 7
#define dac_proto_DacConfigRequest_periodic_samples_ch1_tag 8
#define dac_proto_DacConfigRequest_periodic_samples_ch2_tag 9
#define dac_proto_DacConfigStatus_request_id_tag 1
#define dac_proto_DacConfigStatus_status_code_tag 2
#define dac_proto_DacDataRequest_request_id_tag  1
#define dac_proto_DacDataRequest_run_ch1_tag     2
#define dac_proto_DacDataRequest_run_ch2_tag     3
#define dac_proto_DacDataRequest_data_ch1_tag    4
#define dac_proto_DacDataRequest_data_ch2_tag    5
#define dac_proto_DacDataStatus_request_id_tag   1
#define dac_proto_DacDataStatus_status_code_tag  2
#define dac_proto_DacDataStatus_queue_space_tag  3
#define dac_proto_DacDataStatus_buffer_space_ch1_tag 4
#define dac_proto_DacDataStatus_buffer_space_ch2_tag 5
#define dac_proto_DacMsg_sequence_number_tag     1
#define dac_proto_DacMsg_config_request_tag      2
#define dac_proto_DacMsg_config_status_tag       3
#define dac_proto_DacMsg_data_request_tag        4
#define dac_proto_DacMsg_data_status_tag         5

/* Struct field encoding specification for nanopb */
#define dac_proto_DacConfigRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, BOOL,     config_ch1,        2) \
X(a, STATIC,   SINGULAR, BOOL,     config_ch2,        3) \
X(a, STATIC,   SINGULAR, UENUM,    mode_ch1,          4) \
X(a, STATIC,   SINGULAR, UENUM,    mode_ch2,          5) \
X(a, STATIC,   SINGULAR, UINT32,   sampling_rate_ch1,   6) \
X(a, STATIC,   SINGULAR, UINT32,   sampling_rate_ch2,   7) \
X(a, STATIC,   SINGULAR, UINT32,   periodic_samples_ch1,   8) \
X(a, STATIC,   SINGULAR, UINT32,   periodic_samples_ch2,   9)
#define dac_proto_DacConfigRequest_CALLBACK NULL
#define dac_proto_DacConfigRequest_DEFAULT NULL

#define dac_proto_DacConfigStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2)
#define dac_proto_DacConfigStatus_CALLBACK NULL
#define dac_proto_DacConfigStatus_DEFAULT NULL

#define dac_proto_DacDataRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, BOOL,     run_ch1,           2) \
X(a, STATIC,   SINGULAR, BOOL,     run_ch2,           3) \
X(a, STATIC,   SINGULAR, BYTES,    data_ch1,          4) \
X(a, STATIC,   SINGULAR, BYTES,    data_ch2,          5)
#define dac_proto_DacDataRequest_CALLBACK NULL
#define dac_proto_DacDataRequest_DEFAULT NULL

#define dac_proto_DacDataStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2) \
X(a, STATIC,   SINGULAR, UINT32,   queue_space,       3) \
X(a, STATIC,   SINGULAR, UINT32,   buffer_space_ch1,   4) \
X(a, STATIC,   SINGULAR, UINT32,   buffer_space_ch2,   5)
#define dac_proto_DacDataStatus_CALLBACK NULL
#define dac_proto_DacDataStatus_DEFAULT NULL

#define dac_proto_DacMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_number,   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,config_request,msg.config_request),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,config_status,msg.config_status),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,data_request,msg.data_request),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,data_status,msg.data_status),   5)
#define dac_proto_DacMsg_CALLBACK NULL
#define dac_proto_DacMsg_DEFAULT NULL
#define dac_proto_DacMsg_msg_config_request_MSGTYPE dac_proto_DacConfigRequest
#define dac_proto_DacMsg_msg_config_status_MSGTYPE dac_proto_DacConfigStatus
#define dac_proto_DacMsg_msg_data_request_MSGTYPE dac_proto_DacDataRequest
#define dac_proto_DacMsg_msg_data_status_MSGTYPE dac_proto_DacDataStatus

extern const pb_msgdesc_t dac_proto_DacConfigRequest_msg;
extern const pb_msgdesc_t dac_proto_DacConfigStatus_msg;
extern const pb_msgdesc_t dac_proto_DacDataRequest_msg;
extern const pb_msgdesc_t dac_proto_DacDataStatus_msg;
extern const pb_msgdesc_t dac_proto_DacMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define dac_proto_DacConfigRequest_fields &dac_proto_DacConfigRequest_msg
#define dac_proto_DacConfigStatus_fields &dac_proto_DacConfigStatus_msg
#define dac_proto_DacDataRequest_fields &dac_proto_DacDataRequest_msg
#define dac_proto_DacDataStatus_fields &dac_proto_DacDataStatus_msg
#define dac_proto_DacMsg_fields &dac_proto_DacMsg_msg

/* Maximum encoded size of messages (where known) */
#define dac_proto_DacConfigRequest_size          38
#define dac_proto_DacConfigStatus_size           8
#define dac_proto_DacDataRequest_size            272
#define dac_proto_DacDataStatus_size             26
#define dac_proto_DacMsg_size                    281

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
