/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_UART_PROTO_UART_PB_H_INCLUDED
#define PB_UART_PROTO_UART_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _uart_proto_UartId {
    uart_proto_UartId_UART1 = 0,
    uart_proto_UartId_UART2 = 1
} uart_proto_UartId;

/* Struct definitions */
typedef struct _uart_proto_UartConfig {
    uart_proto_UartId uart_id;
    uint32_t baud_rate;
} uart_proto_UartConfig;

typedef PB_BYTES_ARRAY_T(256) uart_proto_UartData_data_t;
typedef struct _uart_proto_UartData {
    uart_proto_UartId uart_id;
    uart_proto_UartData_data_t data;
} uart_proto_UartData;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _uart_proto_UartId_MIN uart_proto_UartId_UART1
#define _uart_proto_UartId_MAX uart_proto_UartId_UART2
#define _uart_proto_UartId_ARRAYSIZE ((uart_proto_UartId)(uart_proto_UartId_UART2+1))

#define uart_proto_UartConfig_uart_id_ENUMTYPE uart_proto_UartId

#define uart_proto_UartData_uart_id_ENUMTYPE uart_proto_UartId


/* Initializer values for message structs */
#define uart_proto_UartConfig_init_default       {_uart_proto_UartId_MIN, 0}
#define uart_proto_UartData_init_default         {_uart_proto_UartId_MIN, {0, {0}}}
#define uart_proto_UartConfig_init_zero          {_uart_proto_UartId_MIN, 0}
#define uart_proto_UartData_init_zero            {_uart_proto_UartId_MIN, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define uart_proto_UartConfig_uart_id_tag        1
#define uart_proto_UartConfig_baud_rate_tag      2
#define uart_proto_UartData_uart_id_tag          1
#define uart_proto_UartData_data_tag             3

/* Struct field encoding specification for nanopb */
#define uart_proto_UartConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    uart_id,           1) \
X(a, STATIC,   SINGULAR, UINT32,   baud_rate,         2)
#define uart_proto_UartConfig_CALLBACK NULL
#define uart_proto_UartConfig_DEFAULT NULL

#define uart_proto_UartData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    uart_id,           1) \
X(a, STATIC,   SINGULAR, BYTES,    data,              3)
#define uart_proto_UartData_CALLBACK NULL
#define uart_proto_UartData_DEFAULT NULL

extern const pb_msgdesc_t uart_proto_UartConfig_msg;
extern const pb_msgdesc_t uart_proto_UartData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define uart_proto_UartConfig_fields &uart_proto_UartConfig_msg
#define uart_proto_UartData_fields &uart_proto_UartData_msg

/* Maximum encoded size of messages (where known) */
#define uart_proto_UartConfig_size               8
#define uart_proto_UartData_size                 261

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
