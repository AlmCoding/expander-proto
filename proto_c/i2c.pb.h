/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_I2C_PROTO_I2C_PB_H_INCLUDED
#define PB_I2C_PROTO_I2C_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _i2c_proto_I2cId {
    i2c_proto_I2cId_I2C0 = 0,
    i2c_proto_I2cId_I2C1 = 1
} i2c_proto_I2cId;

/* Struct definitions */
typedef struct _i2c_proto_I2cConfig {
    uint32_t clock_rate;
    uint32_t device_addr;
} i2c_proto_I2cConfig;

typedef PB_BYTES_ARRAY_T(256) i2c_proto_I2cMasterRequest_write_data_t;
typedef struct _i2c_proto_I2cMasterRequest {
    uint32_t request_id;
    uint32_t slave_addr;
    i2c_proto_I2cMasterRequest_write_data_t write_data;
    uint32_t read_size;
    uint32_t sequence_id;
    uint32_t sequence_idx;
} i2c_proto_I2cMasterRequest;

typedef PB_BYTES_ARRAY_T(256) i2c_proto_I2cMasterStatus_read_data_t;
typedef struct _i2c_proto_I2cMasterStatus {
    uint32_t queue_space;
    uint32_t buffer_space;
    uint32_t request_id;
    bool rejected;
    bool success;
    i2c_proto_I2cMasterStatus_read_data_t read_data;
} i2c_proto_I2cMasterStatus;

typedef struct _i2c_proto_I2cMsg {
    i2c_proto_I2cId i2c_id;
    uint32_t sequence_number;
    pb_size_t which_msg;
    union {
        i2c_proto_I2cConfig cfg;
        i2c_proto_I2cMasterRequest master_request;
        i2c_proto_I2cMasterStatus master_status;
    } msg;
} i2c_proto_I2cMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _i2c_proto_I2cId_MIN i2c_proto_I2cId_I2C0
#define _i2c_proto_I2cId_MAX i2c_proto_I2cId_I2C1
#define _i2c_proto_I2cId_ARRAYSIZE ((i2c_proto_I2cId)(i2c_proto_I2cId_I2C1+1))




#define i2c_proto_I2cMsg_i2c_id_ENUMTYPE i2c_proto_I2cId


/* Initializer values for message structs */
#define i2c_proto_I2cConfig_init_default         {0, 0}
#define i2c_proto_I2cMasterRequest_init_default  {0, 0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cMasterStatus_init_default   {0, 0, 0, 0, 0, {0, {0}}}
#define i2c_proto_I2cMsg_init_default            {_i2c_proto_I2cId_MIN, 0, 0, {i2c_proto_I2cConfig_init_default}}
#define i2c_proto_I2cConfig_init_zero            {0, 0}
#define i2c_proto_I2cMasterRequest_init_zero     {0, 0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cMasterStatus_init_zero      {0, 0, 0, 0, 0, {0, {0}}}
#define i2c_proto_I2cMsg_init_zero               {_i2c_proto_I2cId_MIN, 0, 0, {i2c_proto_I2cConfig_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define i2c_proto_I2cConfig_clock_rate_tag       1
#define i2c_proto_I2cConfig_device_addr_tag      2
#define i2c_proto_I2cMasterRequest_request_id_tag 1
#define i2c_proto_I2cMasterRequest_slave_addr_tag 2
#define i2c_proto_I2cMasterRequest_write_data_tag 3
#define i2c_proto_I2cMasterRequest_read_size_tag 4
#define i2c_proto_I2cMasterRequest_sequence_id_tag 5
#define i2c_proto_I2cMasterRequest_sequence_idx_tag 6
#define i2c_proto_I2cMasterStatus_queue_space_tag 1
#define i2c_proto_I2cMasterStatus_buffer_space_tag 2
#define i2c_proto_I2cMasterStatus_request_id_tag 3
#define i2c_proto_I2cMasterStatus_rejected_tag   4
#define i2c_proto_I2cMasterStatus_success_tag    5
#define i2c_proto_I2cMasterStatus_read_data_tag  6
#define i2c_proto_I2cMsg_i2c_id_tag              1
#define i2c_proto_I2cMsg_sequence_number_tag     2
#define i2c_proto_I2cMsg_cfg_tag                 3
#define i2c_proto_I2cMsg_master_request_tag      4
#define i2c_proto_I2cMsg_master_status_tag       5

/* Struct field encoding specification for nanopb */
#define i2c_proto_I2cConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   clock_rate,        1) \
X(a, STATIC,   SINGULAR, UINT32,   device_addr,       2)
#define i2c_proto_I2cConfig_CALLBACK NULL
#define i2c_proto_I2cConfig_DEFAULT NULL

#define i2c_proto_I2cMasterRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UINT32,   slave_addr,        2) \
X(a, STATIC,   SINGULAR, BYTES,    write_data,        3) \
X(a, STATIC,   SINGULAR, UINT32,   read_size,         4) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_id,       5) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_idx,      6)
#define i2c_proto_I2cMasterRequest_CALLBACK NULL
#define i2c_proto_I2cMasterRequest_DEFAULT NULL

#define i2c_proto_I2cMasterStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   queue_space,       1) \
X(a, STATIC,   SINGULAR, UINT32,   buffer_space,      2) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        3) \
X(a, STATIC,   SINGULAR, BOOL,     rejected,          4) \
X(a, STATIC,   SINGULAR, BOOL,     success,           5) \
X(a, STATIC,   SINGULAR, BYTES,    read_data,         6)
#define i2c_proto_I2cMasterStatus_CALLBACK NULL
#define i2c_proto_I2cMasterStatus_DEFAULT NULL

#define i2c_proto_I2cMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    i2c_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_number,   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,cfg,msg.cfg),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,master_request,msg.master_request),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,master_status,msg.master_status),   5)
#define i2c_proto_I2cMsg_CALLBACK NULL
#define i2c_proto_I2cMsg_DEFAULT NULL
#define i2c_proto_I2cMsg_msg_cfg_MSGTYPE i2c_proto_I2cConfig
#define i2c_proto_I2cMsg_msg_master_request_MSGTYPE i2c_proto_I2cMasterRequest
#define i2c_proto_I2cMsg_msg_master_status_MSGTYPE i2c_proto_I2cMasterStatus

extern const pb_msgdesc_t i2c_proto_I2cConfig_msg;
extern const pb_msgdesc_t i2c_proto_I2cMasterRequest_msg;
extern const pb_msgdesc_t i2c_proto_I2cMasterStatus_msg;
extern const pb_msgdesc_t i2c_proto_I2cMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define i2c_proto_I2cConfig_fields &i2c_proto_I2cConfig_msg
#define i2c_proto_I2cMasterRequest_fields &i2c_proto_I2cMasterRequest_msg
#define i2c_proto_I2cMasterStatus_fields &i2c_proto_I2cMasterStatus_msg
#define i2c_proto_I2cMsg_fields &i2c_proto_I2cMsg_msg

/* Maximum encoded size of messages (where known) */
#define i2c_proto_I2cConfig_size                 12
#define i2c_proto_I2cMasterRequest_size          289
#define i2c_proto_I2cMasterStatus_size           281
#define i2c_proto_I2cMsg_size                    300

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
