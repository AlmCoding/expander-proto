/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_I2C_PROTO_I2C_PB_H_INCLUDED
#define PB_I2C_PROTO_I2C_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _i2c_proto_I2cId {
    i2c_proto_I2cId_I2C0 = 0,
    i2c_proto_I2cId_I2C1 = 1
} i2c_proto_I2cId;

typedef enum _i2c_proto_AddressWidth {
    i2c_proto_AddressWidth_Bits7 = 0,
    i2c_proto_AddressWidth_Bits8 = 1,
    i2c_proto_AddressWidth_Bits10 = 2,
    i2c_proto_AddressWidth_Bits16 = 3
} i2c_proto_AddressWidth;

typedef enum _i2c_proto_I2cConfigStatusCode {
    i2c_proto_I2cConfigStatusCode_CFG_NOT_INIT = 0,
    i2c_proto_I2cConfigStatusCode_CFG_SUCCESS = 1,
    i2c_proto_I2cConfigStatusCode_CFG_BAD_REQUEST = 2,
    i2c_proto_I2cConfigStatusCode_CFG_INVALID_CLOCK_FREQ = 3,
    i2c_proto_I2cConfigStatusCode_CFG_INVALID_SLAVE_ADDR = 4,
    i2c_proto_I2cConfigStatusCode_CFG_INVALID_SLAVE_ADDR_WIDTH = 5,
    i2c_proto_I2cConfigStatusCode_CFG_INVALID_MEM_ADDR_WIDTH = 6,
    i2c_proto_I2cConfigStatusCode_CFG_INTERFACE_ERROR = 7
} i2c_proto_I2cConfigStatusCode;

typedef enum _i2c_proto_I2cStatusCode {
    i2c_proto_I2cStatusCode_STS_NOT_INIT = 0,
    i2c_proto_I2cStatusCode_STS_SUCCESS = 1,
    i2c_proto_I2cStatusCode_STS_BAD_REQUEST = 2,
    i2c_proto_I2cStatusCode_STS_NO_SPACE = 3,
    i2c_proto_I2cStatusCode_STS_SLAVE_NO_ACK = 4,
    i2c_proto_I2cStatusCode_STS_SLAVE_EARLY_NACK = 5,
    i2c_proto_I2cStatusCode_STS_INTERFACE_ERROR = 6
} i2c_proto_I2cStatusCode;

/* Struct definitions */
typedef struct _i2c_proto_I2cConfigRequest {
    uint32_t request_id;
    uint32_t clock_freq;
    uint32_t slave_addr;
    i2c_proto_AddressWidth slave_addr_width;
    i2c_proto_AddressWidth mem_addr_width;
    bool pullups_enabled;
} i2c_proto_I2cConfigRequest;

typedef struct _i2c_proto_I2cConfigStatus {
    uint32_t request_id;
    i2c_proto_I2cConfigStatusCode status_code;
} i2c_proto_I2cConfigStatus;

typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cMasterRequest_write_data_t;
typedef struct _i2c_proto_I2cMasterRequest {
    uint32_t request_id;
    uint32_t slave_addr;
    i2c_proto_I2cMasterRequest_write_data_t write_data;
    uint32_t read_size;
    uint32_t sequence_id;
    uint32_t sequence_idx;
} i2c_proto_I2cMasterRequest;

typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cMasterStatus_read_data_t;
typedef struct _i2c_proto_I2cMasterStatus {
    uint32_t request_id;
    i2c_proto_I2cStatusCode status_code;
    i2c_proto_I2cMasterStatus_read_data_t read_data;
    uint32_t queue_space;
    uint32_t buffer_space1;
    uint32_t buffer_space2;
} i2c_proto_I2cMasterStatus;

typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cSlaveRequest_write_data_t;
typedef struct _i2c_proto_I2cSlaveRequest {
    uint32_t request_id;
    i2c_proto_I2cSlaveRequest_write_data_t write_data;
    uint32_t read_size;
    uint32_t write_addr;
    uint32_t read_addr;
} i2c_proto_I2cSlaveRequest;

typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cSlaveStatus_read_data_t;
typedef struct _i2c_proto_I2cSlaveStatus {
    uint32_t request_id;
    i2c_proto_I2cStatusCode status_code;
    i2c_proto_I2cSlaveStatus_read_data_t read_data;
    uint32_t queue_space;
} i2c_proto_I2cSlaveStatus;

typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cSlaveNotification_write_data_t;
typedef PB_BYTES_ARRAY_T(128) i2c_proto_I2cSlaveNotification_read_data_t;
typedef struct _i2c_proto_I2cSlaveNotification {
    uint32_t access_id;
    i2c_proto_I2cStatusCode status_code;
    uint32_t addr;
    i2c_proto_I2cSlaveNotification_write_data_t write_data;
    i2c_proto_I2cSlaveNotification_read_data_t read_data;
    uint32_t queue_space;
} i2c_proto_I2cSlaveNotification;

typedef struct _i2c_proto_I2cMsg {
    i2c_proto_I2cId i2c_id;
    uint32_t sequence_number;
    pb_size_t which_msg;
    union {
        i2c_proto_I2cConfigRequest config_request;
        i2c_proto_I2cConfigStatus config_status;
        i2c_proto_I2cMasterRequest master_request;
        i2c_proto_I2cMasterStatus master_status;
        i2c_proto_I2cSlaveRequest slave_request;
        i2c_proto_I2cSlaveStatus slave_status;
        i2c_proto_I2cSlaveNotification slave_notification;
    } msg;
} i2c_proto_I2cMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _i2c_proto_I2cId_MIN i2c_proto_I2cId_I2C0
#define _i2c_proto_I2cId_MAX i2c_proto_I2cId_I2C1
#define _i2c_proto_I2cId_ARRAYSIZE ((i2c_proto_I2cId)(i2c_proto_I2cId_I2C1+1))

#define _i2c_proto_AddressWidth_MIN i2c_proto_AddressWidth_Bits7
#define _i2c_proto_AddressWidth_MAX i2c_proto_AddressWidth_Bits16
#define _i2c_proto_AddressWidth_ARRAYSIZE ((i2c_proto_AddressWidth)(i2c_proto_AddressWidth_Bits16+1))

#define _i2c_proto_I2cConfigStatusCode_MIN i2c_proto_I2cConfigStatusCode_CFG_NOT_INIT
#define _i2c_proto_I2cConfigStatusCode_MAX i2c_proto_I2cConfigStatusCode_CFG_INTERFACE_ERROR
#define _i2c_proto_I2cConfigStatusCode_ARRAYSIZE ((i2c_proto_I2cConfigStatusCode)(i2c_proto_I2cConfigStatusCode_CFG_INTERFACE_ERROR+1))

#define _i2c_proto_I2cStatusCode_MIN i2c_proto_I2cStatusCode_STS_NOT_INIT
#define _i2c_proto_I2cStatusCode_MAX i2c_proto_I2cStatusCode_STS_INTERFACE_ERROR
#define _i2c_proto_I2cStatusCode_ARRAYSIZE ((i2c_proto_I2cStatusCode)(i2c_proto_I2cStatusCode_STS_INTERFACE_ERROR+1))

#define i2c_proto_I2cConfigRequest_slave_addr_width_ENUMTYPE i2c_proto_AddressWidth
#define i2c_proto_I2cConfigRequest_mem_addr_width_ENUMTYPE i2c_proto_AddressWidth

#define i2c_proto_I2cConfigStatus_status_code_ENUMTYPE i2c_proto_I2cConfigStatusCode


#define i2c_proto_I2cMasterStatus_status_code_ENUMTYPE i2c_proto_I2cStatusCode


#define i2c_proto_I2cSlaveStatus_status_code_ENUMTYPE i2c_proto_I2cStatusCode

#define i2c_proto_I2cSlaveNotification_status_code_ENUMTYPE i2c_proto_I2cStatusCode

#define i2c_proto_I2cMsg_i2c_id_ENUMTYPE i2c_proto_I2cId


/* Initializer values for message structs */
#define i2c_proto_I2cConfigRequest_init_default  {0, 0, 0, _i2c_proto_AddressWidth_MIN, _i2c_proto_AddressWidth_MIN, 0}
#define i2c_proto_I2cConfigStatus_init_default   {0, _i2c_proto_I2cConfigStatusCode_MIN}
#define i2c_proto_I2cMasterRequest_init_default  {0, 0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cMasterStatus_init_default   {0, _i2c_proto_I2cStatusCode_MIN, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cSlaveRequest_init_default   {0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cSlaveStatus_init_default    {0, _i2c_proto_I2cStatusCode_MIN, {0, {0}}, 0}
#define i2c_proto_I2cSlaveNotification_init_default {0, _i2c_proto_I2cStatusCode_MIN, 0, {0, {0}}, {0, {0}}, 0}
#define i2c_proto_I2cMsg_init_default            {_i2c_proto_I2cId_MIN, 0, 0, {i2c_proto_I2cConfigRequest_init_default}}
#define i2c_proto_I2cConfigRequest_init_zero     {0, 0, 0, _i2c_proto_AddressWidth_MIN, _i2c_proto_AddressWidth_MIN, 0}
#define i2c_proto_I2cConfigStatus_init_zero      {0, _i2c_proto_I2cConfigStatusCode_MIN}
#define i2c_proto_I2cMasterRequest_init_zero     {0, 0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cMasterStatus_init_zero      {0, _i2c_proto_I2cStatusCode_MIN, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cSlaveRequest_init_zero      {0, {0, {0}}, 0, 0, 0}
#define i2c_proto_I2cSlaveStatus_init_zero       {0, _i2c_proto_I2cStatusCode_MIN, {0, {0}}, 0}
#define i2c_proto_I2cSlaveNotification_init_zero {0, _i2c_proto_I2cStatusCode_MIN, 0, {0, {0}}, {0, {0}}, 0}
#define i2c_proto_I2cMsg_init_zero               {_i2c_proto_I2cId_MIN, 0, 0, {i2c_proto_I2cConfigRequest_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define i2c_proto_I2cConfigRequest_request_id_tag 1
#define i2c_proto_I2cConfigRequest_clock_freq_tag 2
#define i2c_proto_I2cConfigRequest_slave_addr_tag 3
#define i2c_proto_I2cConfigRequest_slave_addr_width_tag 4
#define i2c_proto_I2cConfigRequest_mem_addr_width_tag 5
#define i2c_proto_I2cConfigRequest_pullups_enabled_tag 6
#define i2c_proto_I2cConfigStatus_request_id_tag 1
#define i2c_proto_I2cConfigStatus_status_code_tag 2
#define i2c_proto_I2cMasterRequest_request_id_tag 1
#define i2c_proto_I2cMasterRequest_slave_addr_tag 2
#define i2c_proto_I2cMasterRequest_write_data_tag 3
#define i2c_proto_I2cMasterRequest_read_size_tag 4
#define i2c_proto_I2cMasterRequest_sequence_id_tag 5
#define i2c_proto_I2cMasterRequest_sequence_idx_tag 6
#define i2c_proto_I2cMasterStatus_request_id_tag 1
#define i2c_proto_I2cMasterStatus_status_code_tag 2
#define i2c_proto_I2cMasterStatus_read_data_tag  3
#define i2c_proto_I2cMasterStatus_queue_space_tag 4
#define i2c_proto_I2cMasterStatus_buffer_space1_tag 5
#define i2c_proto_I2cMasterStatus_buffer_space2_tag 6
#define i2c_proto_I2cSlaveRequest_request_id_tag 1
#define i2c_proto_I2cSlaveRequest_write_data_tag 2
#define i2c_proto_I2cSlaveRequest_read_size_tag  3
#define i2c_proto_I2cSlaveRequest_write_addr_tag 4
#define i2c_proto_I2cSlaveRequest_read_addr_tag  5
#define i2c_proto_I2cSlaveStatus_request_id_tag  1
#define i2c_proto_I2cSlaveStatus_status_code_tag 2
#define i2c_proto_I2cSlaveStatus_read_data_tag   3
#define i2c_proto_I2cSlaveStatus_queue_space_tag 4
#define i2c_proto_I2cSlaveNotification_access_id_tag 1
#define i2c_proto_I2cSlaveNotification_status_code_tag 2
#define i2c_proto_I2cSlaveNotification_addr_tag  3
#define i2c_proto_I2cSlaveNotification_write_data_tag 4
#define i2c_proto_I2cSlaveNotification_read_data_tag 5
#define i2c_proto_I2cSlaveNotification_queue_space_tag 6
#define i2c_proto_I2cMsg_i2c_id_tag              1
#define i2c_proto_I2cMsg_sequence_number_tag     2
#define i2c_proto_I2cMsg_config_request_tag      3
#define i2c_proto_I2cMsg_config_status_tag       4
#define i2c_proto_I2cMsg_master_request_tag      5
#define i2c_proto_I2cMsg_master_status_tag       6
#define i2c_proto_I2cMsg_slave_request_tag       7
#define i2c_proto_I2cMsg_slave_status_tag        8
#define i2c_proto_I2cMsg_slave_notification_tag  9

/* Struct field encoding specification for nanopb */
#define i2c_proto_I2cConfigRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UINT32,   clock_freq,        2) \
X(a, STATIC,   SINGULAR, UINT32,   slave_addr,        3) \
X(a, STATIC,   SINGULAR, UENUM,    slave_addr_width,   4) \
X(a, STATIC,   SINGULAR, UENUM,    mem_addr_width,    5) \
X(a, STATIC,   SINGULAR, BOOL,     pullups_enabled,   6)
#define i2c_proto_I2cConfigRequest_CALLBACK NULL
#define i2c_proto_I2cConfigRequest_DEFAULT NULL

#define i2c_proto_I2cConfigStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2)
#define i2c_proto_I2cConfigStatus_CALLBACK NULL
#define i2c_proto_I2cConfigStatus_DEFAULT NULL

#define i2c_proto_I2cMasterRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UINT32,   slave_addr,        2) \
X(a, STATIC,   SINGULAR, BYTES,    write_data,        3) \
X(a, STATIC,   SINGULAR, UINT32,   read_size,         4) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_id,       5) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_idx,      6)
#define i2c_proto_I2cMasterRequest_CALLBACK NULL
#define i2c_proto_I2cMasterRequest_DEFAULT NULL

#define i2c_proto_I2cMasterStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2) \
X(a, STATIC,   SINGULAR, BYTES,    read_data,         3) \
X(a, STATIC,   SINGULAR, UINT32,   queue_space,       4) \
X(a, STATIC,   SINGULAR, UINT32,   buffer_space1,     5) \
X(a, STATIC,   SINGULAR, UINT32,   buffer_space2,     6)
#define i2c_proto_I2cMasterStatus_CALLBACK NULL
#define i2c_proto_I2cMasterStatus_DEFAULT NULL

#define i2c_proto_I2cSlaveRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, BYTES,    write_data,        2) \
X(a, STATIC,   SINGULAR, UINT32,   read_size,         3) \
X(a, STATIC,   SINGULAR, UINT32,   write_addr,        4) \
X(a, STATIC,   SINGULAR, UINT32,   read_addr,         5)
#define i2c_proto_I2cSlaveRequest_CALLBACK NULL
#define i2c_proto_I2cSlaveRequest_DEFAULT NULL

#define i2c_proto_I2cSlaveStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2) \
X(a, STATIC,   SINGULAR, BYTES,    read_data,         3) \
X(a, STATIC,   SINGULAR, UINT32,   queue_space,       4)
#define i2c_proto_I2cSlaveStatus_CALLBACK NULL
#define i2c_proto_I2cSlaveStatus_DEFAULT NULL

#define i2c_proto_I2cSlaveNotification_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       2) \
X(a, STATIC,   SINGULAR, UINT32,   addr,              3) \
X(a, STATIC,   SINGULAR, BYTES,    write_data,        4) \
X(a, STATIC,   SINGULAR, BYTES,    read_data,         5) \
X(a, STATIC,   SINGULAR, UINT32,   queue_space,       6)
#define i2c_proto_I2cSlaveNotification_CALLBACK NULL
#define i2c_proto_I2cSlaveNotification_DEFAULT NULL

#define i2c_proto_I2cMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    i2c_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_number,   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,config_request,msg.config_request),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,config_status,msg.config_status),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,master_request,msg.master_request),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,master_status,msg.master_status),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,slave_request,msg.slave_request),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,slave_status,msg.slave_status),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,slave_notification,msg.slave_notification),   9)
#define i2c_proto_I2cMsg_CALLBACK NULL
#define i2c_proto_I2cMsg_DEFAULT NULL
#define i2c_proto_I2cMsg_msg_config_request_MSGTYPE i2c_proto_I2cConfigRequest
#define i2c_proto_I2cMsg_msg_config_status_MSGTYPE i2c_proto_I2cConfigStatus
#define i2c_proto_I2cMsg_msg_master_request_MSGTYPE i2c_proto_I2cMasterRequest
#define i2c_proto_I2cMsg_msg_master_status_MSGTYPE i2c_proto_I2cMasterStatus
#define i2c_proto_I2cMsg_msg_slave_request_MSGTYPE i2c_proto_I2cSlaveRequest
#define i2c_proto_I2cMsg_msg_slave_status_MSGTYPE i2c_proto_I2cSlaveStatus
#define i2c_proto_I2cMsg_msg_slave_notification_MSGTYPE i2c_proto_I2cSlaveNotification

extern const pb_msgdesc_t i2c_proto_I2cConfigRequest_msg;
extern const pb_msgdesc_t i2c_proto_I2cConfigStatus_msg;
extern const pb_msgdesc_t i2c_proto_I2cMasterRequest_msg;
extern const pb_msgdesc_t i2c_proto_I2cMasterStatus_msg;
extern const pb_msgdesc_t i2c_proto_I2cSlaveRequest_msg;
extern const pb_msgdesc_t i2c_proto_I2cSlaveStatus_msg;
extern const pb_msgdesc_t i2c_proto_I2cSlaveNotification_msg;
extern const pb_msgdesc_t i2c_proto_I2cMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define i2c_proto_I2cConfigRequest_fields &i2c_proto_I2cConfigRequest_msg
#define i2c_proto_I2cConfigStatus_fields &i2c_proto_I2cConfigStatus_msg
#define i2c_proto_I2cMasterRequest_fields &i2c_proto_I2cMasterRequest_msg
#define i2c_proto_I2cMasterStatus_fields &i2c_proto_I2cMasterStatus_msg
#define i2c_proto_I2cSlaveRequest_fields &i2c_proto_I2cSlaveRequest_msg
#define i2c_proto_I2cSlaveStatus_fields &i2c_proto_I2cSlaveStatus_msg
#define i2c_proto_I2cSlaveNotification_fields &i2c_proto_I2cSlaveNotification_msg
#define i2c_proto_I2cMsg_fields &i2c_proto_I2cMsg_msg

/* Maximum encoded size of messages (where known) */
#define i2c_proto_I2cConfigRequest_size          24
#define i2c_proto_I2cConfigStatus_size           8
#define i2c_proto_I2cMasterRequest_size          161
#define i2c_proto_I2cMasterStatus_size           157
#define i2c_proto_I2cMsg_size                    293
#define i2c_proto_I2cSlaveNotification_size      282
#define i2c_proto_I2cSlaveRequest_size           155
#define i2c_proto_I2cSlaveStatus_size            145

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
