/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_I2C_PROTO_I2C_PB_H_INCLUDED
#define PB_I2C_PROTO_I2C_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _i2c_proto_I2cId {
    i2c_proto_I2cId_I2C0 = 0,
    i2c_proto_I2cId_I2C1 = 1
} i2c_proto_I2cId;

/* Struct definitions */
typedef struct _i2c_proto_I2cConfig {
    i2c_proto_I2cId i2c_id;
    uint32_t frequency;
} i2c_proto_I2cConfig;

typedef PB_BYTES_ARRAY_T(256) i2c_proto_I2cMasterData_data_t;
typedef struct _i2c_proto_I2cMasterData {
    i2c_proto_I2cId i2c_id;
    uint32_t request_id;
    uint32_t slave_addr;
    i2c_proto_I2cMasterData_data_t data;
    uint32_t read_size;
} i2c_proto_I2cMasterData;

typedef struct _i2c_proto_I2cStatus {
    uint32_t master_queue_space;
    uint32_t master_buffer_space;
    bool master_overflow;
} i2c_proto_I2cStatus;

typedef struct _i2c_proto_I2cMsg {
    uint32_t sequence_number;
    pb_size_t which_msg;
    union {
        i2c_proto_I2cConfig cfg_msg;
        i2c_proto_I2cMasterData data_msg;
        i2c_proto_I2cStatus status_msg;
    } msg;
} i2c_proto_I2cMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _i2c_proto_I2cId_MIN i2c_proto_I2cId_I2C0
#define _i2c_proto_I2cId_MAX i2c_proto_I2cId_I2C1
#define _i2c_proto_I2cId_ARRAYSIZE ((i2c_proto_I2cId)(i2c_proto_I2cId_I2C1+1))

#define i2c_proto_I2cConfig_i2c_id_ENUMTYPE i2c_proto_I2cId

#define i2c_proto_I2cMasterData_i2c_id_ENUMTYPE i2c_proto_I2cId




/* Initializer values for message structs */
#define i2c_proto_I2cConfig_init_default         {_i2c_proto_I2cId_MIN, 0}
#define i2c_proto_I2cMasterData_init_default     {_i2c_proto_I2cId_MIN, 0, 0, {0, {0}}, 0}
#define i2c_proto_I2cStatus_init_default         {0, 0, 0}
#define i2c_proto_I2cMsg_init_default            {0, 0, {i2c_proto_I2cConfig_init_default}}
#define i2c_proto_I2cConfig_init_zero            {_i2c_proto_I2cId_MIN, 0}
#define i2c_proto_I2cMasterData_init_zero        {_i2c_proto_I2cId_MIN, 0, 0, {0, {0}}, 0}
#define i2c_proto_I2cStatus_init_zero            {0, 0, 0}
#define i2c_proto_I2cMsg_init_zero               {0, 0, {i2c_proto_I2cConfig_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define i2c_proto_I2cConfig_i2c_id_tag           1
#define i2c_proto_I2cConfig_frequency_tag        2
#define i2c_proto_I2cMasterData_i2c_id_tag       1
#define i2c_proto_I2cMasterData_request_id_tag   2
#define i2c_proto_I2cMasterData_slave_addr_tag   3
#define i2c_proto_I2cMasterData_data_tag         4
#define i2c_proto_I2cMasterData_read_size_tag    5
#define i2c_proto_I2cStatus_master_queue_space_tag 1
#define i2c_proto_I2cStatus_master_buffer_space_tag 2
#define i2c_proto_I2cStatus_master_overflow_tag  3
#define i2c_proto_I2cMsg_sequence_number_tag     1
#define i2c_proto_I2cMsg_cfg_msg_tag             2
#define i2c_proto_I2cMsg_data_msg_tag            3
#define i2c_proto_I2cMsg_status_msg_tag          4

/* Struct field encoding specification for nanopb */
#define i2c_proto_I2cConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    i2c_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   frequency,         2)
#define i2c_proto_I2cConfig_CALLBACK NULL
#define i2c_proto_I2cConfig_DEFAULT NULL

#define i2c_proto_I2cMasterData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    i2c_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        2) \
X(a, STATIC,   SINGULAR, UINT32,   slave_addr,        3) \
X(a, STATIC,   SINGULAR, BYTES,    data,              4) \
X(a, STATIC,   SINGULAR, UINT32,   read_size,         5)
#define i2c_proto_I2cMasterData_CALLBACK NULL
#define i2c_proto_I2cMasterData_DEFAULT NULL

#define i2c_proto_I2cStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   master_queue_space,   1) \
X(a, STATIC,   SINGULAR, UINT32,   master_buffer_space,   2) \
X(a, STATIC,   SINGULAR, BOOL,     master_overflow,   3)
#define i2c_proto_I2cStatus_CALLBACK NULL
#define i2c_proto_I2cStatus_DEFAULT NULL

#define i2c_proto_I2cMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_number,   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,cfg_msg,msg.cfg_msg),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,data_msg,msg.data_msg),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,status_msg,msg.status_msg),   4)
#define i2c_proto_I2cMsg_CALLBACK NULL
#define i2c_proto_I2cMsg_DEFAULT NULL
#define i2c_proto_I2cMsg_msg_cfg_msg_MSGTYPE i2c_proto_I2cConfig
#define i2c_proto_I2cMsg_msg_data_msg_MSGTYPE i2c_proto_I2cMasterData
#define i2c_proto_I2cMsg_msg_status_msg_MSGTYPE i2c_proto_I2cStatus

extern const pb_msgdesc_t i2c_proto_I2cConfig_msg;
extern const pb_msgdesc_t i2c_proto_I2cMasterData_msg;
extern const pb_msgdesc_t i2c_proto_I2cStatus_msg;
extern const pb_msgdesc_t i2c_proto_I2cMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define i2c_proto_I2cConfig_fields &i2c_proto_I2cConfig_msg
#define i2c_proto_I2cMasterData_fields &i2c_proto_I2cMasterData_msg
#define i2c_proto_I2cStatus_fields &i2c_proto_I2cStatus_msg
#define i2c_proto_I2cMsg_fields &i2c_proto_I2cMsg_msg

/* Maximum encoded size of messages (where known) */
#define i2c_proto_I2cConfig_size                 8
#define i2c_proto_I2cMasterData_size             279
#define i2c_proto_I2cMsg_size                    288
#define i2c_proto_I2cStatus_size                 14

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
